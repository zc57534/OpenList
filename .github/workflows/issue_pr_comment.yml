name: Issue or PR Auto Reply

on:
  issues:
    types: [opened]
  pull_request:
    types: [opened]

permissions:
  issues: write
  pull-requests: write

jobs:
  auto-reply:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    steps:
      - name: Check issue for unchecked tasks and reply
        uses: actions/github-script@v7
        with:
          script: |
            const issueBody = context.payload.issue.body || "";
            const unchecked = /- \[ \] /.test(issueBody);
            let comment = "感谢您联系OpenList。我们会尽快回复您。\n";
            comment += "Thanks for contacting OpenList. We will reply to you as soon as possible.\n\n";
            if (unchecked) {
              comment += "由于您提出的 Issue 中包含部分未确认的项目，为了更好地管理项目，在人工审核后可能会直接关闭此问题。\n";
              comment += "如果您能确认并补充相关未确认项目的信息，欢迎随时重新提交。我们会及时关注并处理。感谢您的理解与支持！\n";
              comment += "Since your issue contains some unchecked tasks, it may be closed after manual review.\n";
              comment += "If you can confirm and provide information for the unchecked tasks, feel free to resubmit.\n";
              comment += "We will pay attention and handle it in a timely manner.\n\n";
              comment += "感谢您的理解与支持！\n";
              comment += "Thank you for your understanding and support!\n";
            }
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: comment
            });

  pr-title-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check PR title for required prefix and comment
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title || "";
            const ok = /^(feat|docs|fix|style|refactor|chore)\(.+?\): /i.test(title);
            if (!ok) {
              let comment = "⚠️ PR 标题需以 `feat(): `, `docs(): `, `fix(): `, `style(): `, `refactor(): `, `chore(): ` 其中之一开头，例如：`feat(component): 新增功能`。\n";
              comment += "⚠️ The PR title must start with `feat(): `, `docs(): `, `fix(): `, `style(): `, or `refactor(): `, `chore(): `. For example: `feat(component): add new feature`.\n\n";
              comment += "如果跨多个组件，请使用主要组件作为前缀，并在标题中枚举、描述中说明。\n";
              comment += "If it spans multiple components, use the main component as the prefix and enumerate in the title, describe in the body.\n\n";
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }
